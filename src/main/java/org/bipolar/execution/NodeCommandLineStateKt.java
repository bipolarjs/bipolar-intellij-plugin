/*     */ package org.bipolar.execution;
/*     */ 
/*     */ import com.intellij.execution.configurations.GeneralCommandLine;
/*     */ import com.intellij.javascript.debugger.CommandLineDebugConfigurator;
/*     */ import com.intellij.openapi.diagnostic.Logger;
/*     */ import java.util.List;
/*     */ import java.util.function.UnaryOperator;
/*     */ import kotlin.Metadata;
/*     */ import kotlin.Unit;
/*     */ import kotlin.jvm.internal.Intrinsics;
/*     */ import org.jetbrains.annotations.NotNull;
/*     */ import org.jetbrains.concurrency.Promise;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ @Metadata(mv = {1, 4, 2}, bv = {1, 0, 3}, k = 2, d1 = {"\000\016\n\000\n\002\030\002\n\000\n\002\030\002\n\000\"\016\020\000\032\0020\001X\004¢\006\002\n\000\"\016\020\002\032\0020\003X\004¢\006\002\n\000¨\006\004"}, d2 = {"LOG", "Lcom/intellij/openapi/diagnostic/Logger;", "NODE_CLI_RUN_CONFIGURATOR", "Lcom/intellij/javascript/debugger/CommandLineDebugConfigurator;", "intellij.nodeJS"})
/*     */ public final class NodeCommandLineStateKt
/*     */ {
/*  49 */   private static final Logger LOG = Logger.getInstance(NodeCommandLineState.class); static { Intrinsics.checkNotNullExpressionValue(Logger.getInstance(NodeCommandLineState.class), "Logger.getInstance(NodeC…andLineState::class.java)"); }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/* 245 */   private static final CommandLineDebugConfigurator NODE_CLI_RUN_CONFIGURATOR = new NodeCommandLineStateKt$NODE_CLI_RUN_CONFIGURATOR$1(); @Metadata(mv = {1, 4, 2}, bv = {1, 0, 3}, k = 1, d1 = {"\000\013\n\000\n\002\030\002\n\000*\001\000\b\n\030\0002\0020\001¨\006\002"}, d2 = {"org/bipolar/execution/NodeCommandLineStateKt$NODE_CLI_RUN_CONFIGURATOR$1", "Lcom/intellij/javascript/debugger/CommandLineDebugConfigurator;", "intellij.nodeJS"}) public static final class NodeCommandLineStateKt$NODE_CLI_RUN_CONFIGURATOR$1 implements CommandLineDebugConfigurator { public void afterBaseConfiguring(@NotNull GeneralCommandLine commandLine) { Intrinsics.checkNotNullParameter(commandLine, "commandLine"); CommandLineDebugConfigurator.DefaultImpls.afterBaseConfiguring(this, commandLine); } public void beforeBaseConfiguring(@NotNull GeneralCommandLine commandLine) { Intrinsics.checkNotNullParameter(commandLine, "commandLine"); CommandLineDebugConfigurator.DefaultImpls.beforeBaseConfiguring(this, commandLine); } @NotNull public Promise<Unit> configureDebugArgs(@NotNull GeneralCommandLine commandLine, @NotNull List extraArgs) { Intrinsics.checkNotNullParameter(commandLine, "commandLine"); Intrinsics.checkNotNullParameter(extraArgs, "extraArgs"); return CommandLineDebugConfigurator.DefaultImpls.configureDebugArgs(this, commandLine, extraArgs); } @NotNull public UnaryOperator<String> createMessagesFilter() { return CommandLineDebugConfigurator.DefaultImpls.createMessagesFilter(this); }
/*     */      }
/*     */ 
/*     */ }


/* Location:              C:\Program Files\JetBrains\WebStorm 2021.1\plugins\NodeJS\lib\NodeJS.jar!\com\jetbrains\nodejs\execution\NodeCommandLineStateKt.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */